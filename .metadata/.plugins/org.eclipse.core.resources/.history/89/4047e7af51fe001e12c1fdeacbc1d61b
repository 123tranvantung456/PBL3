package test;

import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.MultipartConfig;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.Part;

import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

@MultipartConfig
@WebServlet("/UploadPhotoServlet")
public class UploadPhotoServlet extends HttpServlet {
    
    public UploadPhotoServlet() {
        super();
    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // Forward the request to the upload.jsp page for displaying the upload form
        RequestDispatcher requestDispatcher = request.getRequestDispatcher("/views/upload.jsp");
        requestDispatcher.forward(request, response);
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        try {
            // Lấy giá trị của tham số 'id' từ yêu cầu POST
            String id = request.getParameter("id");
            
            // Lấy phần dữ liệu được gửi lên với tên 'photo' từ yêu cầu POST
            Part part = request.getPart("photo");
            
            // Lấy đường dẫn thực sự của thư mục lưu trữ hình ảnh trong ứng dụng web
            String realPart = request.getServletContext().getRealPath("/images");
            
            // Lấy tên tệp từ phần dữ liệu được gửi lên
            String fileName = Paths.get(part.getSubmittedFileName()).getFileName().toString(); 
            
            // Tạo thư mục lưu trữ hình ảnh nếu nó không tồn tại
            if (!Files.exists(Paths.get(realPart))) {
                Files.createDirectories(Paths.get(realPart));
            }
            
            // Ghi hình ảnh vào thư mục đã chỉ định
            part.write(Paths.get(realPart, fileName).toString());
            
            // Phản hồi với hình ảnh đã tải lên
            try (PrintWriter printWriter = response.getWriter(); ){
                printWriter.write("<!DOCTYPE html>\r\n"
        				+ "<html lang=\"en\">\r\n"
        				+ "<head>\r\n"
        				+ "    <meta charset=\"UTF-8\">\r\n"
        				+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n"
        				+ "    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\r\n"
        				+ "    \r\n"
        				+ "    <title>Document</title>\r\n"
        				+ "</head>\r\n"
        				+ "<body>\r\n"
        				+ "    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\r\n"
        				+ "    <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n"
        				+ "        <div class=\"container-fluid\">\r\n"
        				+ "          <a class=\"navbar-brand\" href=\"#\">STUDENT</a>\r\n"
        				+ "          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n"
        				+ "            <span class=\"navbar-toggler-icon\"></span>\r\n"
        				+ "          </button>\r\n"
        				+ "          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n"
        				+ "            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n"
        				+ "              <li class=\"nav-item\">\r\n"
        				+ "                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">TRANG CHU</a>\r\n"
        				+ "              </li>\r\n"
        				+ "              <li class=\"nav-item\">\r\n"
        				+ "                <a class=\"nav-link\" href=\"#\">SINH VIEN</a>\r\n"
        				+ "              </li>\r\n"
        				+ "              <li class=\"nav-item dropdown\">\r\n"
        				+ "                <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n"
        				+ "                  Dropdown\r\n"
        				+ "                </a>\r\n"
        				+ "                <ul class=\"dropdown-menu\">\r\n"
        				+ "                  <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\r\n"
        				+ "                  <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n"
        				+ "                  <li><hr class=\"dropdown-divider\"></li>\r\n"
        				+ "                  <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n"
        				+ "                </ul>\r\n"
        				+ "              </li>\r\n"
        				+ "              <li class=\"nav-item\">\r\n"
        				+ "                <a class=\"nav-link disabled\" aria-disabled=\"true\">Disabled</a>\r\n"
        				+ "              </li>\r\n"
        				+ "            </ul>\r\n"
        				+ "            <form class=\"d-flex\" role=\"search\">\r\n"
        				+ "              <input name= \"keyword\" value= \"" + 1 + "\" class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n"
        				+ "              <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n"
        				+ "            </form>\r\n"
        				+ "          </div>\r\n"
        				+ "        </div>\r\n"
        				+ "      </nav>\r\n"
        				+ "    <form method = \"POST\">"
        				+ "        <div class=\"mb-3\">\r\n"
        				+ "          <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\r\n"
        				+ "          <input name=\"username\" type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n"
        				+ "          <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\r\n"
        				+ "        </div>\r\n"
        				+ "        <div class=\"mb-3\">\r\n"
        				+ "          <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n"
        				+ "          <input name=\"password\" type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n"
        				+ "        </div>\r\n"
        				+ "        <div class=\"mb-3 form-check\">\r\n"
        				+ "          <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\">\r\n"
        				+ "          <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\r\n"
        				+ "        </div>\r\n"
        				+ "        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n"
        				+ "      </form>\r\n"
        				+ "</body>\r\n"
        				+ "</html>");
            } catch (IOException e) {
                e.printStackTrace(); // Xử lý ngoại lệ nếu ghi ra response gặp vấn đề
            }
        } catch (Exception e) {
            // Xử lý ngoại lệ nếu có bất kỳ lỗi nào xảy ra
            e.printStackTrace(); // In ra thông tin lỗi vào console hoặc log
            
            // Phản hồi với lỗi nếu có ngoại lệ
            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "Error processing request: " + e.getMessage());
        }
    }

}
