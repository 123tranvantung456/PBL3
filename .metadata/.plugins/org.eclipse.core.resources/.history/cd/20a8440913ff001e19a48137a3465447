package com.pbl3.libs;

import jakarta.servlet.http.Part;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.UUID; // Import thư viện UUID

import jakarta.servlet.ServletException;

// part : lay tu form
// realPart: đường dẫn thư muc để lưu dữ liệu, không có thì phải tạo
// originalFileName: đường dẫn tệp gửi lên
// fileName: tên đường dẫn trong máy chủ 

public class FileData {
	private static String name = "data/";

	// check trùng
	public static String Check(String directory, String fileName) {
		Path path = Paths.get(directory, fileName);
		if (Files.exists(path)) {
			String baseName = fileName.substring(0, fileName.lastIndexOf('.'));
			String extension = fileName.substring(fileName.lastIndexOf('.'));
			String uniqueName = baseName + "_" + UUID.randomUUID().toString() + extension;
			return Check(directory, uniqueName);
		}
		return fileName;
	}

	public static void delete(string fileDelete){
		String originalFileName = Paths.get(part.getSubmittedFileName()).getFileName().toString();
		String fileName = realPath + originalFileName;
		System.out.println("can xoa: "+ fileName);
    }

	// thêm
	public static String add(Part part, String realPart) throws IOException, ServletException {
		String originalFileName = Paths.get(part.getSubmittedFileName()).getFileName().toString();
		String fileName = Check(realPart, originalFileName);
		if (!Files.exists(Paths.get(realPart))) {
			Files.createDirectories(Paths.get(realPart));
		}
		part.write(Paths.get(realPart, fileName).toString());
		String str = name + fileName;
		return str;
	}

	public static String getName() {
		return name;
	}

	public static void setName(String name) {
		FileData.name = name;
	}
}
