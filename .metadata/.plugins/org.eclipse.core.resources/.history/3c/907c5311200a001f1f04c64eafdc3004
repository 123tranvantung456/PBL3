package com.pbl3.service;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import com.pbl3.model.CouponModel;

public class CouponService extends BaseService{
	// Thêm một coupon vào cơ sở dữ liệu
    public static void add(CouponModel couponModel) {
        try {
            Connection connection = getConnection();
            PreparedStatement preparedStatement = connection.prepareStatement("INSERT INTO couponModel (Code, StartDate, EndDate, Quantity, QuantityUsed) VALUES (?, ?, ?, ?, ?)");
            preparedStatement.setString(1, couponModel.getCode());
            preparedStatement.setTimestamp(2, new java.sql.Timestamp(couponModel.getStartDate().getTime()));	
            preparedStatement.setTimestamp(3, new java.sql.Timestamp(couponModel.getEndDate().getTime()));
            preparedStatement.setInt(4, couponModel.getQuantity());
            preparedStatement.setInt(5, couponModel.getQuantityUsed());
            preparedStatement.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    public static void delete(int couponID) {
        try {
            Connection connection = getConnection();
            PreparedStatement preparedStatement = connection.prepareStatement("DELETE FROM couponModel WHERE CouponID = ?");
            preparedStatement.setInt(1, couponID);
            preparedStatement.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    public static void edit(CouponModel couponModel) {
        try {
            Connection connection = getConnection();
            PreparedStatement preparedStatement = connection.prepareStatement("UPDATE couponModel SET Code = ?, StartDate = ?, EndDate = ?WHERE CouponID = ?");
            preparedStatement.setString(1, couponModel.getCode());
            preparedStatement.setTimestamp(2, new java.sql.Timestamp(couponModel.getStartDate().getTime()));
            preparedStatement.setTimestamp(3, new java.sql.Timestamp(couponModel.getEndDate().getTime()));
            preparedStatement.setInt(4, couponModel.getQuantity());
            preparedStatement.setInt(5, couponModel.getQuantityUsed());
            preparedStatement.setInt(6, couponModel.getCouponID());
            preparedStatement.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    public static void main(String[] args) {
		
	}
}
