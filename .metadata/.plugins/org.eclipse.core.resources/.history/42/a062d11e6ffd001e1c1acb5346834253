package com.pbl3.service;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.LinkedList;

import com.pbl3.model.PartModel;
import com.pbl3.model.QuestionModel;
import com.pbl3.model.TestsModel;
import com.pbl3.model.TypeQuestionModel;

public class QuestionService extends BaseService{
	// query all question in 1 test
	public static LinkedList<QuestionModel> all(int testID) {
		LinkedList<QuestionModel> questionModels = new LinkedList<QuestionModel>();
		try {
			Connection connection = getConnection();
			PreparedStatement preparedStatement = connection.prepareStatement("SELECT * FROM question WHERE TestID = ? ORDER BY OrderNumber ASC;");
			preparedStatement.setInt(1, testID);
			ResultSet resultSet = preparedStatement.executeQuery();
			while(resultSet.next()) {
				int questionID = resultSet.getInt(1);
				Integer typeQuestionID = resultSet.getInt(2);
//				Integer testID;
				String questionContent = resultSet.getString(4);
				String contentAnswerA = resultSet.getString(5);
				String contentAnswerB = resultSet.getString(6);
				String contentAnswerC = resultSet.getString(7);
				String ContentAnswerD = resultSet.getString(8);
				String AnswerCorrect = resultSet.getString(9);
				String AnswerExplain = resultSet.getString(10) ;
				int OrderNumber = resultSet.getInt(11);
				
				QuestionModel questionModel = new QuestionModel(questionID, typeQuestionID, testID, questionContent, contentAnswerA, contentAnswerB, contentAnswerC, ContentAnswerD, AnswerCorrect, AnswerExplain, OrderNumber);   
				questionModels.add(questionModel);             
			}
			System.out.println("size cua tests: " + questionModels.size());
			return questionModels; 
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return questionModels;
	}
	
	// query all question and type question in 1 test  
	public static void allQuestionAndType(int testID, QuestionModel[] questionModels) {
	    try {
	        Connection connection = getConnection();
	        PreparedStatement preparedStatement = connection.prepareStatement("SELECT Question.*, TypeQuestion.TypeQuestionName,TypeQuestion.PartID, Part.PartName, Part.OrderNumber  FROM Question INNER JOIN TypeQuestion ON Question.TypeQuestionID = TypeQuestion.TypeQuestionID INNER JOIN Part ON TypeQuestion.PartID = Part.PartID   WHERE Question.TestID = ? ORDER BY Question.OrderNumber ASC");
	        preparedStatement.setInt(1, testID);
	        ResultSet resultSet = preparedStatement.executeQuery();
	        while (resultSet.next()) {
	            int questionID = resultSet.getInt(1);
	            Integer typeQuestionID = resultSet.getInt(2);
	            String questionContent = resultSet.getString(4);
	            String contentAnswerA = resultSet.getString(5);
	            String contentAnswerB = resultSet.getString(6);
	            String contentAnswerC = resultSet.getString(7);
	            String ContentAnswerD = resultSet.getString(8); 
	            String AnswerCorrect = resultSet.getString(9);
	            String AnswerExplain = resultSet.getString(10); 
	            int OrderNumber = resultSet.getInt(11);
	            String typeQuestionName = resultSet.getString(12);
	            int PartID = resultSet.getInt(13);
	            String partName = resultSet.getString(14);
	            int OrderNumberPart = resultSet.getInt(15);
	            PartModel partModel = new PartModel(PartID, partName, OrderNumberPart);
	            TypeQuestionModel typeQuestionModel = new TypeQuestionModel(typeQuestionID, typeQuestionName, PartID, partModel);
	            QuestionModel questionModel = new QuestionModel(questionID, typeQuestionID, testID, questionContent, contentAnswerA, contentAnswerB, contentAnswerC, ContentAnswerD, AnswerCorrect, AnswerExplain, OrderNumber, typeQuestionModel);

	            // Gán QuestionModel vào mảng 
	            questionModels[questionModel.getOrderNumber() - 1] = questionModel;
	        }

	        System.out.println("size cua questionModels: " + questionModels.length);
	    } catch (SQLException e) {
	        e.printStackTrace();
	    }
	}

	//  

}
