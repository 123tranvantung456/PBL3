/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.19
 * Generated at: 2024-04-19 04:13:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.admin.users;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.LinkedList;
import com.pbl3.model.UserModel;

public final class edit_002dusers_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.pbl3.model.UserModel");
    _jspx_imports_classes.add("java.util.LinkedList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<!-- Required meta tags -->\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("	content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("	integrity=\"sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("<title>Hello, world!</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<style>\r\n");
      out.write(".container {\r\n");
      out.write("	max-width: 800px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-control:focus {\r\n");
      out.write("	border-color: #0EDC8D; /* Màu của border khi focus */\r\n");
      out.write("	box-shadow: 0 0 0 0.2rem rgba(0, 255, 255, 0.25);\r\n");
      out.write("	/* Đổ bóng khi focus */\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("	");

	UserModel userModel = (UserModel) request.getAttribute("userModel");
	
      out.write("  \r\n");
      out.write("	");
boolean admin = false; 
	  boolean teacher = false;
	  boolean student = false;
	  if ((userModel.getAccountModel().getRoleModel().getRoleName()).equals("Quản Trị Viên")) admin = true;
	  if ((userModel.getAccountModel().getRoleModel().getRoleName()).equals("Học Viên")) student = true;
	  if ((userModel.getAccountModel().getRoleModel().getRoleName()).equals("Giáo Viên")) teacher = true;
	
      out.write("    \r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<form method=\"post\">\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"exampleFormControlInput1\">Ten Dang Nhap</label> <input\r\n");
      out.write("					type=\"text\" class=\"form-control custom-autofill-selected\"\r\n");
      out.write("					id=\"exampleFormControlInput1\" name=\"username\"\r\n");
      out.write("					value=\"");
      out.print(userModel.getAccountModel().getUserName());
      out.write("\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"exampleFormControlInput2\">Mat Khau</label> <input\r\n");
      out.write("					type=\"password\" class=\"form-control custom-autofill-selected\"\r\n");
      out.write("					id=\"exampleFormControlInput2\" name=\"password\" value=\"*******\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"exampleFormControlSelect4\">Quyền Truy Cập</label> <select\r\n");
      out.write("					class=\"form-control custom-autofill-selected\"\r\n");
      out.write("					id=\"exampleFormControlSelect4\" name=\"roleID\">\r\n");
      out.write("					<option value=\"1\"\r\n");
      out.write("						");
if (admin) {
      out.write("\r\n");
      out.write("						selected=\"selected\" ");
}
      out.write(">Quản trị viên</option>\r\n");
      out.write("					<option value=\"2\"\r\n");
      out.write("						");
if (teacher) {
      out.write("\r\n");
      out.write("						selected=\"selected\" ");
}
      out.write(">Giáo viên</option>\r\n");
      out.write("					<option value=\"3\"\r\n");
      out.write("						");
if (student) {
      out.write("\r\n");
      out.write("						selected=\"selected\" ");
}
      out.write(">Học viên</option>\r\n");
      out.write("				</select>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"exampleFormControlInput6\">Name</label> <input\r\n");
      out.write("					type=\"text\" class=\"form-control custom-autofill-selected\"\r\n");
      out.write("					id=\"exampleFormControlInput6\" name=\"name\"\r\n");
      out.write("					value=\"");
      out.print(userModel.getName());
      out.write("\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"exampleFormControlInput7\">Email</label> <input\r\n");
      out.write("					type=\"email\" class=\"form-control custom-autofill-selected\"\r\n");
      out.write("					id=\"exampleFormControlInput7\" name=\"email\"\r\n");
      out.write("					value=\"");
      out.print(userModel.getEmail());
      out.write("\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"exampleFormControlInput8\">Phone</label> <input\r\n");
      out.write("					type=\"text\" class=\"form-control custom-autofill-selected\"\r\n");
      out.write("					id=\"exampleFormControlInput8\" name=\"phone\"\r\n");
      out.write("					value=\"");
      out.print(userModel.getPhone());
      out.write("\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"\" class=\"form-label\">Gender</label>\r\n");
      out.write("				<div class=\"mb-3 form-check\">\r\n");
      out.write("					<input type=\"radio\"\r\n");
      out.write("						class=\"form-check-input custom-autofill-selected\"\r\n");
      out.write("						id=\"exampleCheck1\" name=\"gender\" value=\"true\"\r\n");
      out.write("						");
if (userModel.getGender() != null && userModel.getGender()) {
      out.write("\r\n");
      out.write("						checked ");
}
      out.write("> <label class=\"form-check-label\"\r\n");
      out.write("						for=\"exampleCheck1\">Nam</label>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"mb-3 form-check\">\r\n");
      out.write("					<input type=\"radio\"\r\n");
      out.write("						class=\"form-check-input custom-autofill-selected\"\r\n");
      out.write("						id=\"exampleCheck2\" name=\"gender\" value=\"false\"\r\n");
      out.write("						");
if (userModel.getGender() != null && !userModel.getGender()) {
      out.write("\r\n");
      out.write("						checked ");
}
      out.write("> <label class=\"form-check-label\"\r\n");
      out.write("						for=\"exampleCheck2\">Nu</label>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<button type=\"submit\" class=\"btn btn-primary\">Sua</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<a href=\"/MVC/admin/users\"><button type=\"submit\"\r\n");
      out.write("						class=\"btn btn-primary\">Back</button> </a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js\"\r\n");
      out.write("		integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("		integrity=\"sha384-Fy6S3B9q64WdZWQUiU+q4/2Lc9npb8tCaSX9FK7E8HnRr0Jz8D6OP9dO5Vg3Q9ct\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
