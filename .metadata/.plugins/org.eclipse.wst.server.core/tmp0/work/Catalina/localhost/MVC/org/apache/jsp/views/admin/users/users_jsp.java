/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.19
 * Generated at: 2024-05-04 08:47:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.admin.users;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.LinkedList;
import com.pbl3.model.UserModel;

public final class users_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.pbl3.model.UserModel");
    _jspx_imports_classes.add("java.util.LinkedList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<!-- Required meta tags -->\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("	content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("	integrity=\"sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("<title>Hello, world!</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".pagination {\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pagination a {\r\n");
      out.write("	color: black;\r\n");
      out.write("	float: left;\r\n");
      out.write("	padding: 8px 16px;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	transition: background-color .3s;\r\n");
      out.write("	border: 1px solid #ddd;\r\n");
      out.write("	margin: 0 4px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pagination a.active {\r\n");
      out.write("	background-color: #0EDC8D;\r\n");
      out.write("	color: white;\r\n");
      out.write("	border: 1px solid #4CAF50;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pagination a:hover:not(.active) {\r\n");
      out.write("	background-color: #ddd;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pag {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	margin-bottom: 30px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"content\">    \r\n");
      out.write("			<div class=\"top\">\r\n");
      out.write("				<a href=\"/MVC/admin/users/create\" class=\"btn btn-primary\"\r\n");
      out.write("					style=\"margin-top: 30px; margin-bottom: 20px;\">Thêm</a>\r\n");
      out.write("				<form class=\"d-flex\" role=\"search\">\r\n");
      out.write("					<input\r\n");
      out.write("						value=\"");
      out.print(request.getParameter("keyword") != null ? request.getParameter("keyword") : "");
      out.write("\"\r\n");
      out.write("						name=\"keyword\" class=\"form-control me-2\" type=\"search\"\r\n");
      out.write("						placeholder=\"Search\" aria-label=\"Search\">\r\n");
      out.write("					<button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("			<table class=\"table table-striped\">\r\n");
      out.write("				<thead>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>UserName</th>\r\n");
      out.write("						<th>Name</th>\r\n");
      out.write("						<th>Email</th>\r\n");
      out.write("						<th>ID</th>\r\n");
      out.write("						<th>Phone</th>\r\n");
      out.write("						<th>ID ACC</th>\r\n");
      out.write("						<th>gender</th>\r\n");
      out.write("						<th>Role Name</th>\r\n");
      out.write("						<th>#</th>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</thead>\r\n");
      out.write("				<tbody>\r\n");
      out.write("					");

					for (UserModel u : (LinkedList<UserModel>) request.getAttribute("userModels")) {
					
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>");
      out.print(u.getAccountModel().getUserName());
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print(u.getName());
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print(u.getEmail());
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print(u.getUserID());
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print(u.getPhone());
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print(u.getAccountID());
      out.write("</td>\r\n");
      out.write("						<td>\r\n");
      out.write("							");

							if (u.getGender() == null)
							
      out.write(" N/A ");

							else if (!u.getGender())
							
      out.write(" Nữ ");

							else
							
      out.write(" Nam\r\n");
      out.write("						</td>\r\n");
      out.write("						<td>");
      out.print(u.getAccountModel().getRoleModel().getRoleName());
      out.write("</td>\r\n");
      out.write("						<td><a href=\"/MVC/admin/users/edit?userID=");
      out.print(u.getUserID());
      out.write("\"\r\n");
      out.write("							class=\"btn btn-primary\">sửa</a>\r\n");
      out.write("							<form method=\"post\" action=\"/MVC/admin/users\">\r\n");
      out.write("								<input type=\"hidden\" name=\"accountID\"\r\n");
      out.write("									value=\"");
      out.print(u.getAccountID());
      out.write("\">\r\n");
      out.write("								<button type=\"submit\" class=\"btn btn-danger\">Xóa</button>\r\n");
      out.write("							</form></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					");

					}
					
      out.write("\r\n");
      out.write("				</tbody>\r\n");
      out.write("			</table>\r\n");
      out.write("			<div class=\"pag\">\r\n");
      out.write("				<div class=\"pagination\">\r\n");
      out.write("				");
int totalPage = (Integer)request.getAttribute("totalPage"); 
      out.write(" \r\n");
      out.write("					");
if(request.getParameter("page") == null) {
      out.write("\r\n");
      out.write("						");
//if()
      out.write("\r\n");
      out.write("						");
for(int i = 1; i <= totalPage; i++){ 
      out.write("\r\n");
      out.write("							<a href=\"/MVC/admin/users?page=");
      out.print(i);
      out.write('"');
      out.write(' ');
if(i == 1){
      out.write("class=\"active\"");
}
      out.write('>');
      out.write(' ');
      out.print(i);
      out.write("</a>\r\n");
      out.write("						");
} 
      out.write("\r\n");
      out.write("					");
if(totalPage != 1){
      out.write("	\r\n");
      out.write("					<a href=\"/MVC/admin/users?page=");
      out.print(2);
      out.write("\">&raquo;</a>														\r\n");
      out.write("					");
} 
      out.write("\r\n");
      out.write("					");
} 
					else if (Integer.parseInt(request.getParameter("page")) > totalPage) {
      out.write("\r\n");
      out.write("						\r\n");
      out.write("					");
}
					else {
      out.write("\r\n");
      out.write("					");
if(Integer.parseInt(request.getParameter("page")) != 1){ 
      out.write("\r\n");
      out.write("					<a href=\"/MVC/admin/users?page=");
      out.print(Integer.parseInt(request.getParameter("page")) - 1);
      out.write("\">&laquo;</a>\r\n");
      out.write("					");
 }
      out.write("\r\n");
      out.write("					");
for(int i = 1; i <= totalPage; i++){ 
      out.write("\r\n");
      out.write("						<a href=\"/MVC/admin/users?page=");
      out.print(i);
      out.write('"');
      out.write(' ');
if(request.getParameter("page").equals(Integer.toString(i))){
      out.write(" class=\"active\" ");
} 
      out.write('>');
      out.print(i);
      out.write("</a>\r\n");
      out.write("						");
} 
      out.write(" \r\n");
      out.write("					");
if(Integer.parseInt(request.getParameter("page")) != totalPage){ 
      out.write("\r\n");
      out.write("					<a href=\"/MVC/admin/users?page=");
      out.print(Integer.parseInt(request.getParameter("page")) + 1);
      out.write("\">&raquo;</a>\r\n");
      out.write("					");
}
      out.write(" \r\n");
      out.write("					");
}
      out.write("        \r\n");
      out.write("				</div>  \r\n");
      out.write("			</div> \r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js\"\r\n");
      out.write("		integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("		integrity=\"sha384-Fy6S3B9q64WdZWQUiU+q4/2Lc9npb8tCaSX9FK7E8HnRr0Jz8D6OP9dO5Vg3Q9ct\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
