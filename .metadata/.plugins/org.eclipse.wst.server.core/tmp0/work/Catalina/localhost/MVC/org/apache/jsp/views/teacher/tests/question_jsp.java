/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.19
 * Generated at: 2024-04-23 03:06:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.teacher.tests;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.ArrayList;
import com.pbl3.model.TypeQuestionModel;
import com.pbl3.model.QuestionModel;
import java.util.LinkedList;
import com.pbl3.model.TestsModel;

public final class question_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(5);
    _jspx_imports_classes.add("com.pbl3.model.TestsModel");
    _jspx_imports_classes.add("com.pbl3.model.TypeQuestionModel");
    _jspx_imports_classes.add("com.pbl3.model.QuestionModel");
    _jspx_imports_classes.add("java.util.LinkedList");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<!-- Required meta tags -->\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("	content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("	integrity=\"sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("<title>Hello, world!</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<style>\r\n");
      out.write("h1 {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".box {\r\n");
      out.write("	width: 250px;\r\n");
      out.write("	height: 300px;\r\n");
      out.write("	color: red;\r\n");
      out.write("	border: 1px solid red;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".col-12 {\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	margin-bottom: 15px;\r\n");
      out.write("	border: 1px solid #EAF0E4;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("	margin-top: 40px;\r\n");
      out.write("	max-width: 800px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card-header {\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".cl {\r\n");
      out.write("	background-color: #F7F7F4; /* Added missing '#' */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".inner-wrap {\r\n");
      out.write("	margin-bottom: 100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".inner-wrap h1 {\r\n");
      out.write("	background-color: green;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		");

		int first = 0, last = 0;
		for (int i = 1; i <= (Integer) request.getAttribute("totalPart"); i++) {
		
      out.write("\r\n");
      out.write("		<div class=\"inner-wrap\">\r\n");
      out.write("			<h1>\r\n");
      out.write("				PART:\r\n");
      out.write("				");
      out.print(i);
      out.write("</h1>\r\n");
      out.write("			");

			if (i == 1) {
				first = 1;
				last = 6;
			} else if (i == 2) {
				first = 7;
				last = 31;
			} else if (i == 3) {
				first = 32;
				last = 70;
			} else if (i == 4) {
				first = 71;
				last = 100;
			} else if (i == 5) {
				first = 101;
				last = 130;
			} else if (i == 6) {
				first = 131;
				last = 146;
			} else if (i == 7) {
				first = 147;
				last = 200;
			}
			QuestionModel[] arr = (QuestionModel[]) request.getAttribute("questionModels");

			for (int index = first - 1; index < last; index++) {
				Boolean check = false;
				if (index == first - 1) {
					check = true;
				} else {
					for (int indexCheck = index; indexCheck < last; indexCheck++) {
						if (arr[indexCheck].getQuestionID() != 0) {
						check = true;  
						break;
						}
					}
				}
				System.out.println("cau: " + (index + 1) + " check: " + check);
				if (check || (index > first - 1 && arr[index].getQuestionID() == 0 && arr[index - 1].getQuestionID() != 0)) {
			
      out.write("\r\n");
      out.write("			<div class=\"accordion\" id=\"accordionExample\">\r\n");
      out.write("				<div class=\"card\">\r\n");
      out.write("					<div class=\"card-header\" id=\"heading");
      out.print(index);
      out.write("\"\r\n");
      out.write("						");
if (arr[index].getQuestionID() == 0) {
      out.write("\r\n");
      out.write("						style=\"background: #FFB294\" ");
}
      out.write(">\r\n");
      out.write("						<h2 class=\"mb-0\">\r\n");
      out.write("							<button class=\"btn btn-link btn-block text-left\" type=\"button\"\r\n");
      out.write("								data-toggle=\"collapse\" data-target=\"#collapse");
      out.print(index);
      out.write("\"\r\n");
      out.write("								aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n");
      out.write("								<h3>\r\n");
      out.write("									CÃ¢u\r\n");
      out.write("									");
      out.print(index + 1);
      out.write(".\r\n");
      out.write("									\r\n");
      out.write("								</h3>\r\n");
      out.write("							</button>\r\n");
      out.write("						</h2>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div id=\"collapse");
      out.print(index);
      out.write("\" class=\"collapse collapsed cl\"\r\n");
      out.write("					aria-labelledby=\"heading");
      out.print(index);
      out.write("\" data-parent=\"#accordionExample\">\r\n");
      out.write("					<div class=\"card-body\">\r\n");
      out.write("						<form method=\"POST\" enctype=\"multipart/form-data\"\r\n");
      out.write("							");
if (arr[index].getQuestionID() == 0) {
      out.write("\r\n");
      out.write("							action=\"/MVC/teacher/question/create?testsID=");
      out.print(request.getParameter("testsID"));
      out.write("\"\r\n");
      out.write("							");
} else {
      out.write("\r\n");
      out.write("							action=\"/MVC/teacher/question/edit?testsID=");
      out.print(request.getParameter("testsID"));
      out.write(" \"\r\n");
      out.write("							");
}
      out.write(">\r\n");
      out.write("\r\n");
      out.write("							<!-- loai cau hoi -->\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"type");
      out.print(index);
      out.write("\">Loai Cau Hoi</label> <select\r\n");
      out.write("									class=\"form-control custom-autofill-selected\"\r\n");
      out.write("									id=\"type");
      out.print(index);
      out.write("\" name=\"typeQuestionID\">\r\n");
      out.write("									");

									LinkedList<TypeQuestionModel> typeQuestionModels = (LinkedList<TypeQuestionModel>) request
											.getAttribute("typeQuestionModels" + i);
									for (TypeQuestionModel t : typeQuestionModels) {
									
      out.write("\r\n");
      out.write("									<option value=\"");
      out.print(t.getTypeQuestionID());
      out.write("\"\r\n");
      out.write("										");
if ((t.getTypeQuestionName()).equals(arr[index].getTypeQuestionModel().getTypeQuestionName())) {
      out.write("\r\n");
      out.write("										selected=\"selected\" ");
}
      out.write('>');
      out.print(t.getTypeQuestionName());
      out.write("</option>\r\n");
      out.write("									");

									}
									
      out.write("\r\n");
      out.write("								</select>\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("							<!-- audio -->\r\n");
      out.write("							");

							if (i == 1 || i == 2 || ((i == 3 || i == 4) && (index + 1 - 32) % 3 == 0)) {
							
      out.write("\r\n");
      out.write("							");

							if (arr[index].getAudio() == null || (arr[index].getAudio()).equals("")) {
							
      out.write("\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"img");
      out.print(index);
      out.write("\">Audio</label> <input\r\n");
      out.write("									id=\"Audio");
      out.print(index);
      out.write("\" name=\"audio\" type=\"file\"\r\n");
      out.write("									class=\"form-control\" placeholder=\"Audio\" required=\"required\">\r\n");
      out.write("							</div>\r\n");
      out.write("							");

							} else {
							
      out.write("\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"Audio1");
      out.print(index);
      out.write("\">Audio</label> <br>\r\n");
      out.write("								<audio controls>\r\n");
      out.write("									<source src=\"/MVC/");
      out.print(arr[index].getAudio());
      out.write("\" type=\"audio/mpeg\">\r\n");
      out.write("								</audio>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<input type=\"hidden\" name=\"audioString\"\r\n");
      out.write("									value=\"");
      out.print(arr[index].getAudio());
      out.write("\">\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"Audio2");
      out.print(index);
      out.write("\">Thay Doi Audio</label> <input\r\n");
      out.write("									id=\"Audio2");
      out.print(index);
      out.write("\" name=\"audio\" type=\"file\"\r\n");
      out.write("									class=\"form-control\" placeholder=\"thay doi audio\">\r\n");
      out.write("							</div>\r\n");
      out.write("							");

							}
							}
							
      out.write("\r\n");
      out.write("\r\n");
      out.write("							<!-- anh mo ta -->\r\n");
      out.write("							");

							if (i == 1 || i == 7 || ((i == 3 || i == 4) && (index + 1 - 32) % 3 == 0)|| (i == 6 && (index + 1 - 131)% 4 == 0)) {
							
      out.write("\r\n");
      out.write("							");

							if ((arr[index].getImage() == null || (arr[index].getImage() != null && (arr[index].getImage()).equals("")))) {
							
      out.write("\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"img");
      out.print(index);
      out.write("\">Anh Mo Ta</label> <input\r\n");
      out.write("									id=\"img");
      out.print(index);
      out.write("\" name=\"image\" type=\"file\"\r\n");
      out.write("									class=\"form-control\" placeholder=\"anh mo ta\" ");
if (i == 1) {
      out.write("\r\n");
      out.write("									required=\"required\" ");
}
      out.write(">\r\n");
      out.write("							</div>\r\n");
      out.write("							");

							} else {
							
      out.write("\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"img1");
      out.print(index);
      out.write("\">Anh Mo Ta</label> <img\r\n");
      out.write("									style=\"width: 100%;\" alt=\"anh mo ta\"\r\n");
      out.write("									src=\"/MVC/");
      out.print(arr[index].getImage());
      out.write("\">\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<input type=\"hidden\" name=\"imageString\"\r\n");
      out.write("									value=\"");
      out.print(arr[index].getImage());
      out.write("\">\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"img2");
      out.print(index);
      out.write("\">Thay Doi Anh Mo Ta</label> <input\r\n");
      out.write("									id=\"img2");
      out.print(index);
      out.write("\" name=\"image\" type=\"file\"\r\n");
      out.write("									class=\"form-control\" placeholder=\"thay doi anh mo ta\">\r\n");
      out.write("							</div>\r\n");
      out.write("							");

							}
							}
							
      out.write("\r\n");
      out.write("\r\n");
      out.write("							<!-- testsID -->\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<input type=\"hidden\" name=\"testsID\"\r\n");
      out.write("									value=\"");
      out.print(request.getParameter("testsID"));
      out.write("\">\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("							<!-- ná»i dung cÃ¢u há»i -->\r\n");
      out.write("							");

							if (i == 3 || i == 4 || i == 5 || i == 7) {
							
      out.write("\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"content");
      out.print(index);
      out.write("\">Noi Dung Cau Hoi</label>\r\n");
      out.write("								<textarea name=\"questionContent\" class=\"form-control\"\r\n");
      out.write("									id=\"content");
      out.print(index);
      out.write("\" rows=\"2\">");
      out.print(arr[index].getQuestionContent());
      out.write("</textarea>\r\n");
      out.write("							</div>\r\n");
      out.write("							");

							}
							
      out.write("\r\n");
      out.write("\r\n");
      out.write("							<!-- ná»i dung ÄÃ¡p Ã¡n -->\r\n");
      out.write("							");

							if (i == 3 || i == 4 || i == 5 || i == 6 || i == 7) {
							
      out.write("\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"answerA");
      out.print(index);
      out.write("\">Noi Dung Dap An A</label> <input\r\n");
      out.write("									type=\"text\" class=\"form-control\" id=\"answerA");
      out.print(index);
      out.write("\"\r\n");
      out.write("									aria-describedby=\"emailHelp\" name=\"contentAnswerA\"\r\n");
      out.write("									value=\"");
      out.print(arr[index].getContentAnswerA());
      out.write("\">\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"answerB");
      out.print(index);
      out.write("\">Noi Dung Dap An B</label> <input\r\n");
      out.write("									type=\"text\" class=\"form-control\" id=\"answerB");
      out.print(index);
      out.write("\"\r\n");
      out.write("									aria-describedby=\"emailHelp\" name=\"contentAnswerB\"\r\n");
      out.write("									value=\"");
      out.print(arr[index].getContentAnswerB());
      out.write("\">\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"answerC");
      out.print(index);
      out.write("\">Noi Dung Dap An C</label> <input\r\n");
      out.write("									type=\"text\" class=\"form-control\" id=\"answerC");
      out.print(index);
      out.write("\"\r\n");
      out.write("									aria-describedby=\"emailHelp\" name=\"contentAnswerC\"\r\n");
      out.write("									value=\"");
      out.print(arr[index].getContentAnswerC());
      out.write("\">\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"answerD");
      out.print(index);
      out.write("\">Noi Dung Dap An D</label> <input\r\n");
      out.write("									type=\"text\" class=\"form-control\" id=\"answerD");
      out.print(index);
      out.write("\"\r\n");
      out.write("									aria-describedby=\"emailHelp\" name=\"contentAnswerD\"\r\n");
      out.write("									value=\"");
      out.print(arr[index].getContentAnswerD());
      out.write("\">\r\n");
      out.write("							</div>\r\n");
      out.write("							");

							}
							
      out.write("\r\n");
      out.write("							<!-- ÄÃ¡p Ã¡n ÄÃºng -->\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"answerCorrect");
      out.print(index);
      out.write("\">Dap An Dung</label> <select\r\n");
      out.write("									class=\"form-control custom-autofill-selected\"\r\n");
      out.write("									id=\"answerCorrect");
      out.print(index);
      out.write("\" name=\"answerCorrect\">\r\n");
      out.write("									<option value=\"A\"\r\n");
      out.write("										");
if ((arr[index].getAnswerCorrect()).equals("A")) {
      out.write("\r\n");
      out.write("										selected=\"selected\" ");
}
      out.write(">A</option>\r\n");
      out.write("									<option value=\"B\"\r\n");
      out.write("										");
if ((arr[index].getAnswerCorrect()).equals("B")) {
      out.write("\r\n");
      out.write("										selected=\"selected\" ");
}
      out.write(">B</option>\r\n");
      out.write("									<option value=\"C\"\r\n");
      out.write("										");
if ((arr[index].getAnswerCorrect()).equals("C")) {
      out.write("\r\n");
      out.write("										selected=\"selected\" ");
}
      out.write(">C</option>\r\n");
      out.write("									");

									if (i != 2) {
									
      out.write("\r\n");
      out.write("									<option value=\"D\"\r\n");
      out.write("										");
if ((arr[index].getAnswerCorrect()).equals("D")) {
      out.write("\r\n");
      out.write("										selected=\"selected\" ");
}
      out.write(">D</option>\r\n");
      out.write("									");

									}
									
      out.write("\r\n");
      out.write("								</select>\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("							<!-- giáº£i thÃ­ch -->\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"explain");
      out.print(index);
      out.write("\">Giai Thich</label>\r\n");
      out.write("								<textarea name=\"answerExplain\" class=\"form-control\"\r\n");
      out.write("									id=\"explain");
      out.print(index);
      out.write("\" rows=\"2\">");
      out.print(arr[index].getAnswerExplain());
      out.write("</textarea>\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("							<!-- ordernumber -->\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<input name=\"orderNumber\" type=\"hidden\" value=\"");
      out.print(index + 1);
      out.write("\">\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("							<!-- questionID -->\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<input name=\"questionID\" type=\"hidden\"\r\n");
      out.write("									value=\"");
      out.print(arr[index].getQuestionID());
      out.write("\">\r\n");
      out.write("							</div>\r\n");
      out.write("							");

							if (arr[index].getQuestionID() != 0) {
							
      out.write("\r\n");
      out.write("							<button type=\"submit\" class=\"btn btn-primary\">Sá»­a</button>\r\n");
      out.write("\r\n");
      out.write("							");

							} else {
							
      out.write("\r\n");
      out.write("							<button type=\"submit\" class=\"btn btn-primary\">ThÃªm</button>\r\n");
      out.write("							");

							}
							
      out.write("\r\n");
      out.write("						</form>\r\n");
      out.write("						");

						if (arr[index].getQuestionID() != 0) {
						
      out.write("\r\n");
      out.write("						<form method=\"post\" action=\"/MVC/teacher/question/delete\">\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("\r\n");
      out.write("								<input type=\"hidden\" name=\"questionID\"\r\n");
      out.write("									value=\"");
      out.print(arr[index].getQuestionID());
      out.write("\"> <input\r\n");
      out.write("									type=\"hidden\" name=\"testsID\"\r\n");
      out.write("									value=\"");
      out.print(request.getParameter("testsID"));
      out.write("\">\r\n");
      out.write("							</div>\r\n");
      out.write("							<button type=\"submit\" class=\"btn btn-danger\">XÃ³a</button>\r\n");
      out.write("\r\n");
      out.write("						</form>\r\n");
      out.write("						");

						}
						
      out.write("\r\n");
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			");

			}
			}
			
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		");

		}
		
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js\"\r\n");
      out.write("		integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("		integrity=\"sha384-Fy6S3B9q64WdZWQUiU+q4/2Lc9npb8tCaSX9FK7E8HnRr0Jz8D6OP9dO5Vg3Q9ct\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
